<Query Kind="Program" />

/* The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors? */

namespace Solve
{
	class Q12
	{
		static void Main(string[] args)
		{
			/* First I wrote down consecutive triangle numbers from the first to the eighth, with all of their divisors.  
			   Then I found out the number of divisors equals to the twice of the number of divisors which are smaller than it's square root.
			   (and plus one If the square root itself is a integer). 
			   For example, divisors of 28 smaller than root 28 are '1, 2, 4' and root 28 is not integer, so the number of divisors are 6(=3 * 2 (+ 0)). */
			double rootN = 0;
			int rdRootN = 0;
			int divisorsN = 0;
			int n=1;
			int plusN=2;
			while(true)
			{
				rootN = Math.Sqrt(n);
				rdRootN = (int)Math.Floor(rootN);
				for(int i=1; i<=rdRootN; i++)
				{
					if(n%i==0) divisorsN++;
				}
				divisorsN *= 2;
				if(rdRootN == (int)rootN) divisorsN++;
				if(divisorsN>500) break;
				n+=plusN;
				plusN++;
				divisorsN=0;
			}
			Console.Write(n);
		}
	}
}